---
// src/pages/authors/[slug].astro
import Layout from '../../layouts/Layout.astro';
import Header from '../../components/Header.astro';
import Footer from '../../components/Footer.astro';
import PostCard from '../../components/PostCard.astro';
import { getAllAuthors, getAuthorBySlug, getPostsByAuthor } from '../../../lib/cosmic';
import type { Author, Post } from '../../../types';

export async function getStaticPaths() {
  const authors = await getAllAuthors();
  return authors.map((author) => ({
    params: { slug: author.slug },
  }));
}

const { slug } = Astro.params;
const author = await getAuthorBySlug(slug) as Author | null;

if (!author) {
  return Astro.redirect('/404');
}

const posts = await getPostsByAuthor(author.id) as Post[];
---

<Layout 
  title={`${author.title} - Modern Blog`}
  description={author.metadata?.bio || `Read posts by ${author.title} on Modern Blog`}
  image={author.metadata?.profile_photo?.imgix_url ? `${author.metadata.profile_photo.imgix_url}?w=1200&h=630&fit=crop&auto=format,compress` : undefined}
>
  <Header />
  
  <main class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12">
    <div class="mb-12">
      <div class="flex items-start space-x-6">
        {author.metadata?.profile_photo && (
          <img
            src={`${author.metadata.profile_photo.imgix_url}?w=320&h=320&fit=crop&auto=format,compress`}
            alt={author.title}
            class="w-32 h-32 rounded-full"
            width="160"
            height="160"
          />
        )}
        <div>
          <h1 class="text-4xl font-bold text-gray-900 mb-4">{author.title}</h1>
          {author.metadata?.bio && (
            <p class="text-xl text-gray-600 mb-4">{author.metadata.bio}</p>
          )}
          <p class="text-gray-600">
            {posts.length} {posts.length === 1 ? 'post' : 'posts'}
          </p>
        </div>
      </div>
    </div>
    
    {posts && posts.length > 0 ? (
      <div>
        <h2 class="text-2xl font-bold text-gray-900 mb-6">Posts by {author.title}</h2>
        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
          {posts.map((post) => (
            <PostCard post={post} />
          ))}
        </div>
      </div>
    ) : (
      <div class="text-center py-12">
        <p class="text-gray-600 text-lg">No posts found by this author yet.</p>
      </div>
    )}
  </main>
  
  <Footer />
</Layout>